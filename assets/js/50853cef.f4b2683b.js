"use strict";(self.webpackChunkcka_prep_2=self.webpackChunkcka_prep_2||[]).push([[2544],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=i.createContext({}),s=function(e){var t=i.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),h=r,f=p["".concat(d,".").concat(h)]||p[h]||u[h]||o;return n?i.createElement(f,a(a({ref:t},c),{},{components:n})):i.createElement(f,a({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7935:function(e,t,n){n.d(t,{o:function(){return r}});var i=n(7294);function r(e){return i.createElement("div",{style:{borderRadius:"10px"}},i.createElement(a,null),i.createElement(d,{lines:e.lines}))}function o(e){return i.createElement("div",{style:{backgroundColor:e.buttonColor,borderRadius:"100%",width:"10px",height:"10px",margin:"3px"}})}function a(){return i.createElement("div",{style:{display:"flex",backgroundColor:"#edeeef",padding:"6px",borderTopLeftRadius:"10px",borderTopRightRadius:"10px"}},i.createElement(o,{buttonColor:"#FF605C"}),i.createElement(o,{buttonColor:"#FFBD44"}),i.createElement(o,{buttonColor:"#00CA4E"}))}function l(e){var t=e.dir?e.dir:"~";return i.createElement("p",{style:{margin:"0px",padding:"2px"}},t+":$ "+e.text)}function d(e){console.log(e.lines);var t=e.lines.map((function(e){return i.createElement(l,{text:e.text,dir:e.dir})}));return i.createElement("div",{style:{backgroundColor:"black",color:"#00ff01",fontFamily:"monospace",borderBottomLeftRadius:"10px",borderBottomRightRadius:"10px",paddingTop:"5px",paddingBottom:"5px",paddingLeft:"4px",marginBottom:"10px"}},t)}},7776:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var i=n(7462),r=n(3366),o=(n(7294),n(3905)),a=(n(7935),["components"]),l={id:"chapter12",title:"Scheduling"},d=void 0,s={unversionedId:"fundamentals/chapter12",id:"fundamentals/chapter12",title:"Scheduling",description:"Course Reading",source:"@site/docs/fundamentals/chapter12.mdx",sourceDirName:"fundamentals",slug:"/fundamentals/chapter12",permalink:"/cka-prep/docs/fundamentals/chapter12",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/fundamentals/chapter12.mdx",tags:[],version:"current",frontMatter:{id:"chapter12",title:"Scheduling"},sidebar:"tutorialSidebar",previous:{title:"Ingress",permalink:"/cka-prep/docs/fundamentals/chapter11"},next:{title:"Logging and Troubleshooting",permalink:"/cka-prep/docs/fundamentals/chapter13"}},c=[{value:"Course Reading",id:"course-reading",children:[{value:"Learning objectives",id:"learning-objectives",children:[],level:3},{value:"kube-scheduler",id:"kube-scheduler",children:[],level:3},{value:"Filtering (predicates)",id:"filtering-predicates",children:[],level:3},{value:"Scoring (Priorities)",id:"scoring-priorities",children:[],level:3},{value:"Scheduling Policies",id:"scheduling-policies",children:[],level:3},{value:"Pod specification",id:"pod-specification",children:[{value:"<code>nodeName</code> and <code>nodeSelector</code>",id:"nodename-and-nodeselector",children:[],level:4},{value:"<code>affinity</code>",id:"affinity",children:[],level:4},{value:"<code>tolerations</code>",id:"tolerations",children:[],level:4},{value:"<code>schedulerName</code>",id:"schedulername",children:[],level:4}],level:3},{value:"Specifying the node label",id:"specifying-the-node-label",children:[],level:3},{value:"Scheduler profiles",id:"scheduler-profiles",children:[],level:3}],level:2}],u={toc:c};function p(e){var t=e.components,n=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"course-reading"},"Course Reading"),(0,o.kt)("h3",{id:"learning-objectives"},"Learning objectives"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Learn how the kube-scheduler schedules pods"),(0,o.kt)("li",{parentName:"ul"},"Use labels to manage the scheduling of pods"),(0,o.kt)("li",{parentName:"ul"},"Configure taints and tolerations"),(0,o.kt)("li",{parentName:"ul"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"podAffinity")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"podAntiAffinity")),(0,o.kt)("li",{parentName:"ul"},"Understand how to run multiple schedulers")),(0,o.kt)("h3",{id:"kube-scheduler"},"kube-scheduler"),(0,o.kt)("p",null,"Scheduling becomes more important as a deployment of Kubernetes grows and becomes more diverse.  It's the kube-scheduler that handles this task."),(0,o.kt)("p",null,"Users are able to set pod priority, which allows other less important pods to be evicted if need be so that the higher priority pod can be scheduled.  The scheduler will keep track of the nodes in your cluster, filters them, and then uses priority functions to determine the best node to schedule a pod on.  Once determines, the pod specification is sent to that node's kubelet to be created."),(0,o.kt)("p",null,"Scheduling decisions can be influenced by using labels on either the node or pod.  Labels for podAffinity, taints, and bindings allow more configuration of how a pod is assigned to a node. These labels do not have to be drastic either, they can serve the function, for example, of stating a preference of a Pod one where to be scheduled, but if that can not occur it could be scheduled somewhere else.  We will oftentimes see ",(0,o.kt)("em",{parentName:"p"},"require")," used in the name of parameters, but in reality this is more of a preference. Some setting will also evict pods if the conditions are no longer met (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"requiredDuringScheduling")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"requiredDuringExecution"),")."),(0,o.kt)("p",null,"Custom schedulers can also be configured but need to be added to the cluster manually."),(0,o.kt)("h3",{id:"filtering-predicates"},"Filtering (predicates)"),(0,o.kt)("p",null,"The scheduler runs through a list of filters, or ",(0,o.kt)("strong",{parentName:"p"},"predicates"),", to find which nodes are available, and then ranks the nodes using priority functions.  The node that ranks the highest is chosen by the scheduler. "),(0,o.kt)("p",null,"The following are the predicates used:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"PodFitsHostPorts"),(0,o.kt)("li",{parentName:"ul"},"PodFitsHost"),(0,o.kt)("li",{parentName:"ul"},"PodFitsResources"),(0,o.kt)("li",{parentName:"ul"},"MatchNodeSelector"),(0,o.kt)("li",{parentName:"ul"},"NoVolumeZoneConflict"),(0,o.kt)("li",{parentName:"ul"},"NoDiskConflict"),(0,o.kt)("li",{parentName:"ul"},"MaxCSIVolumeCount"),(0,o.kt)("li",{parentName:"ul"},"PodToleratesNodeTaints"),(0,o.kt)("li",{parentName:"ul"},"CheckVolumeBinding")),(0,o.kt)("p",null,"The predicates are evaluated in an order, which can be configured. This allows for the least amount of checks possible for the scheduler."),(0,o.kt)("p",null,"These predicates work to filter out the nodes for certain conditions. For example, the ",(0,o.kt)("inlineCode",{parentName:"p"},"PodFitsResources")," would filter out any nodes that do not have the required resources for the pod pending creation."),(0,o.kt)("p",null,"Prior to v1.23 you could use a ",(0,o.kt)("inlineCode",{parentName:"p"},"kind: Policy")," to order and give weight to certain predicates. Policies are now depreciated."),(0,o.kt)("h3",{id:"scoring-priorities"},"Scoring (Priorities)"),(0,o.kt)("p",null,"Priorities are used to weight resources. Unless the SelectorSpreadPriority (ranks nodes based on number of existing running pods) setting has been configured with pod and node affinity, the node with the least amount of pods will be chosen, which is a basic way of spreading pods about the cluster."),(0,o.kt)("p",null,"Different priorities are used depending on cluster needs. For example, you could use an ",(0,o.kt)("inlineCode",{parentName:"p"},"ImageLocalityPriority")," to favor nodes that have a container's image already downloaded."),(0,o.kt)("p",null,"The list of priorities that can be used are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"SelectorSpreadPriority"),(0,o.kt)("li",{parentName:"ul"},"InterPodAffinityPriority"),(0,o.kt)("li",{parentName:"ul"},"LeastRequestedPriority"),(0,o.kt)("li",{parentName:"ul"},"MostRequestedPriority"),(0,o.kt)("li",{parentName:"ul"},"RequestedToCapacityRatioPriority"),(0,o.kt)("li",{parentName:"ul"},"BalancedResourceAllocation"),(0,o.kt)("li",{parentName:"ul"},"NodePreferAvoidPodsPriority"),(0,o.kt)("li",{parentName:"ul"},"NodeAffinityPriority"),(0,o.kt)("li",{parentName:"ul"},"TaintTolerationPriority"),(0,o.kt)("li",{parentName:"ul"},"ImageLocalityPriority"),(0,o.kt)("li",{parentName:"ul"},"ServiceSpreadingPriority"),(0,o.kt)("li",{parentName:"ul"},"EqualPriority"),(0,o.kt)("li",{parentName:"ul"},"EvenPodsSpreadPriority")),(0,o.kt)("p",null,"More detail on what each of these priorities do can be ",(0,o.kt)("a",{parentName:"p",href:"https://v1-22.docs.kubernetes.io/docs/reference/scheduling/policies/#priorities"},"found here"),"."),(0,o.kt)("p",null,"Prior to v1.23 you could use a ",(0,o.kt)("inlineCode",{parentName:"p"},"kind: Policy")," to specify the priorities to use in scoring.  As noted before, this is depreciated."),(0,o.kt)("h3",{id:"scheduling-policies"},"Scheduling Policies"),(0,o.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Scheduling policies were ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/scheduling/policies/"},"depreciated after v1.23")," in favor of scheduler configuration so newer versions will not have this capability. See more on scheduler configuration ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/scheduling/config/"},"here"),"."))),(0,o.kt)("p",null,"By default, the scheduler has predicates and priorities it uses; these can be changed with scheduler policies however."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "kind" : "Policy",\n    "apiVersion" : "v1",\n    "predicates" : [\n        {"name" : "MatchNodeSelector", "order": 6},\n        {"name" : "PodFitsHostPorts", "order": 2},\n        {"name" : "PodFitsResources", "order": 3},\n        {"name" : "NoDiskConflict", "order": 4},\n        {"name" : "PodToleratesNodeTaints", "order": 5},\n        {"name" : "PodFitsHost", "order": 1}\n    ],\n    "priorities" : [\n        {"name" : "LeastRequestedPriority", "weight" : 1},\n        {"name" : "BalancedResourceAllocation", "weight" : 1},       \n        {"name" : "ServiceSpreadingPriority", "weight" : 2},\n        {"name" : "EqualPriority", "weight" : 1}   \n    ],\n    "hardPodAffinitySymmetricWeight" : 10\n}\n')),(0,o.kt)("p",null,"Typically, you would use the ",(0,o.kt)("inlineCode",{parentName:"p"},"--policy-config-file")," to pass the files and the ",(0,o.kt)("inlineCode",{parentName:"p"},"--scheduler-name")," to give the scheduler a name. You'd then have two schedulers running and can specify which to use in the pod specification."),(0,o.kt)("p",null,"Having multiple schedulers opens up the potential for conflict in allocation of pods.  Each pod should declare which scheduler it should use, but if not and separate schedulers determine that a node is eligible, and both deploy to it and then cause the resources to no longer exist, then a conflict occurs. The local kubelet would then return these pods to the scheduler to reassign until eventually one succeeds and another node is chosen for the other pod."),(0,o.kt)("h3",{id:"pod-specification"},"Pod specification"),(0,o.kt)("p",null,"Most scheduling decisions are made off what's defined in the podSpec.  The fields that carry much of the weight for this are:"),(0,o.kt)("h4",{id:"nodename-and-nodeselector"},(0,o.kt)("inlineCode",{parentName:"h4"},"nodeName")," and ",(0,o.kt)("inlineCode",{parentName:"h4"},"nodeSelector")),(0,o.kt)("p",null,"These options allow a Pod to be assigned to a single node or a node with a certain label."),(0,o.kt)("h4",{id:"affinity"},(0,o.kt)("inlineCode",{parentName:"h4"},"affinity")),(0,o.kt)("p",null,"Affinity and anti-affinity can be used to set a requirement or preference for which nodes to schedule to.  If using a preference, the matching node is chosen first, but other nodes are used if no match is found."),(0,o.kt)("h4",{id:"tolerations"},(0,o.kt)("inlineCode",{parentName:"h4"},"tolerations")),(0,o.kt)("p",null,"Taints are placed on nodes so pods are not scheduled there for whatever reason.  Tolerations allow pods to ignore the taint and be scheduled on that node as long as other requirements for scheduling are met."),(0,o.kt)("h4",{id:"schedulername"},(0,o.kt)("inlineCode",{parentName:"h4"},"schedulerName")),(0,o.kt)("p",null,"If you want to define the use of a custom scheduler, you could use the ",(0,o.kt)("inlineCode",{parentName:"p"},"schedulerName")," field to do so."),(0,o.kt)("h3",{id:"specifying-the-node-label"},"Specifying the node label"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"nodeSelector")," field is a straightforward way to to target a nde or set of nodes for scheduling.  It used one or more key-value labels."),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  containers:\n  - name: redis\n    image: redis\n  nodeSelector:\n    net: fast\n")),(0,o.kt)("p",null,"In the example we are using the ",(0,o.kt)("inlineCode",{parentName:"p"},"nodeSelector")," to target any nodes with a ",(0,o.kt)("inlineCode",{parentName:"p"},"net")," label and value of ",(0,o.kt)("inlineCode",{parentName:"p"},"fast"),". Reminder that these labels and values are administrator created and are not actually necessarily tied to any properties of the hardware of the node."),(0,o.kt)("p",null,"A pod remains in a pending state until a node is found with matching labels."),(0,o.kt)("p",null,"You should be able to use node affinity to do the same thing as a ",(0,o.kt)("inlineCode",{parentName:"p"},"nodSelector"),"."),(0,o.kt)("h3",{id:"scheduler-profiles"},"Scheduler profiles"))}p.isMDXComponent=!0}}]);